#include <SoftwareSerial.h>

SoftwareSerial esp8266(2, 3); // RX, TX

String buffer = ""; // ESP8266'dan gelen verileri saklamak için

void setup() {
  Serial.begin(115200);   // Arduino'nun seri haberleşme hızını başlat
  esp8266.begin(115200);  // ESP8266 için seri haberleşme hızını başlat


  
  // AT Komutları
  Serial.println("ESP8266'YE Reset atiliyor.");
  delay(1000);
  esp8266.println("AT+RST");
 delay(15000);
 // while(esp8266.available()) {
 // esp8266.read();
 // }
  esp8266.println("AT+CIPSTART=\"TCP\",\"192.168.196.63\",8000");
  delay(6000);
 // while(esp8266.available()) {
 //   Serial.write(esp8266.read());
 // }

  esp8266.println("AT+CIPMODE=1");
    delay(1000);
    while(esp8266.available()) {
    esp8266.read();
  }
 // delay(4000);
  
 // esp8266.println("AT+CIPSEND");

  //  while(esp8266.available()) {
 //   Serial.write(esp8266.read());
  //}

  //delay(5000);
  Serial.println("ESP8266 ile haberlesme basladi.AT+CIPSEND\R\N komutu ile baslanabilir.");
}

void loop() {
  // Arduino'nun seri monitöründen gelen veriyi ESP8266'ya gönder
  while (Serial.available()) {
    esp8266.write(Serial.read());
  }

  // ESP8266'dan gelen veriyi tamponla
  while (esp8266.available()) {
    char c = esp8266.read();
    buffer += c;

    // Eğer sonlandırıcı karakteri aldıysak, tamponlanmış veriyi gönder
    if (c == '\n') {
      Serial.print(buffer);
      buffer = ""; // Tamponu sıfırla
    }
  }
}
